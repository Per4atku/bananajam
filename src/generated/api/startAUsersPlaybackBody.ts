/**
 * Generated by orval v7.0.1 üç∫
 * Do not edit manually.
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.

In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href="https://developer.spotify.com/documentation/general/guides/authorization-guide/">OAuth 2.0</a>.

The base URI for all Web API requests is `https://api.spotify.com/v1`.

Need help? See our <a href="https://developer.spotify.com/documentation/web-api/guides/">Web API guides</a> for more information, or visit the <a href="https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer">Spotify for Developers community forum</a> to ask questions and connect with other developers.

 * OpenAPI spec version: 2024.6.16
 */
import type { StartAUsersPlaybackBodyOffset } from './startAUsersPlaybackBodyOffset';

export type StartAUsersPlaybackBody = {
  /** Optional. Spotify URI of the context to play.
Valid contexts are albums, artists & playlists.
`{context_uri:"spotify:album:1Je1IMUlBXcx1Fz0WE7oPT"}`
 */
  context_uri?: string;
  /** Optional. Indicates from where in the context playback should start. Only available when context_uri corresponds to an album or playlist object
"position" is zero based and can‚Äôt be negative. Example: `"offset": {"position": 5}`
"uri" is a string representing the uri of the item to start at. Example: `"offset": {"uri": "spotify:track:1301WleyT98MSxVHPZCA6M"}`
 */
  offset?: StartAUsersPlaybackBodyOffset;
  /** Indicates from what position to start playback. Must be a positive number. Passing in a position that is greater than the length of the track will cause the player to start playing the next song.
 */
  position_ms?: number;
  /** Optional. A JSON array of the Spotify track URIs to play.
For example: `{"uris": ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh", "spotify:track:1301WleyT98MSxVHPZCA6M"]}`
 */
  uris?: string[];
  [key: string]: unknown;
 };
